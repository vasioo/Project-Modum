@using Modum.Models.BaseModels.Models;
@using Modum.Models.BaseModels.Models.PaymentStructure;
@using Modum.Models.BaseModels.Models.ProductStructure;
@using Modum.Models.ViewModels;
@model CartViewModel

@{
    IEnumerable<Product> tenFavItems = Model.TenFavItems;
    IEnumerable<Product> lastViewedProducts = Model.LastViewedProducts;
    decimal initialPrice = 0;
    decimal discount = 0;
}
@section Styles {
    <link href="@Url.Content("~/css/custom/_CardScrollerPartial.css")" rel="stylesheet" type="text/css" />
}
<style>
    .cart-container {
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    }
</style>
<div class="cart-page container-fluid">
    <div class="centered-container">
        <div id="personalized-header" class="d-flex align-items-center">
            <div class="display-3 pl-5 pt-5 pr-5" style="font-weight:500; font-family:monospace">Cart</div>
        </div>
        <div class="row pb-5 pt-5">
            @if (Model == null || Model.Products.Count() == 0)
            {
                <div class="col-12 col-xl-9 pb-3 cart-container d-flex justify-content-center align-items-center">
                    <h2 class="text-center">No items added to cart!</h2>
                </div>
            }
            else
            {
                <div class="col-12 col-xl-9 pb-3 cart-container">
                    <div id="personalized-items">
                        <div id="personalized-items-section" class="">
                            @{
                                IEnumerable<CartItem> sizes = (IEnumerable<CartItem>)Model.ProductSizes;
                            }
                            @foreach (var item in Model.Products)
                            {
                                decimal percentageToBeRemoved = 0;
                                foreach (var ltc in item.LTCs)
                                {
                                    percentageToBeRemoved += ltc.PercentageOfDiscount;
                                }
                                var sizesForItem = sizes.Where(s => s.ProductId == item.Id).ToList();
                                @foreach (var size in sizesForItem)
                                {

                                    string link = $"https://res.cloudinary.com/dzaicqbce/image/upload/v1695818842/image-1-for-{item.ImageContainerId}.png";

                                    initialPrice += item.Price;
                                    discount += Math.Round(item.DiscountFromPrice + ((item.Price + item.DiscountFromPrice) * (percentageToBeRemoved / 100m)),2);
                                    var prodPrice = item.Price - (item.DiscountFromPrice + ((item.Price + item.DiscountFromPrice) * Math.Round((percentageToBeRemoved / 100m),2)));
                                    <div class="row">
                                        <div class=" p-md-4 m-md-4 col-12 col-md-4 col-lg-3 col-xl-3">
                                            <a class=""><img src=@link class="w-100 h-100" /></a>
                                        </div>
                                        <div class="p-4 m-4 col-12 col-md col-lg col-xl">
                                            <div class="row pb-2 justify-content-between">
                                                <div class="col-4">
                                                    <div class="row">
                                                        <div class="pr-1 h3">@item.Brand</div>
                                                        <div class="pl-md-1 h3">@item.Title</div>
                                                    </div>
                                                </div>
                                                <div class="col-3 col-lg-2 pr-5">
                                                    <div class="row">
                                                        <a id="@item.Id " data-original-text="@size.Size" class="btn add-to-favourites-button h3"><i class="fa-regular fa-heart fa-xl p-1"></i></a>
                                                        <a id="@item.Id " data-original-text="@size.Size" class="btn remove-from-cart-button h3"><i class="fa fa-trash fa-xl p-1"></i></a>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row pb-2">
                                                <div class="pr-1 h3">Color:</div>
                                                <a class="btn pl-1 h3" style="background-color:@item.Colour"></a>
                                            </div>
                                            <div class="row pb-2">
                                                <div class="pr-1 h3">Size:</div>
                                                <a class="pl-1 h3">@size.Size</a>
                                            </div>

                                            <div class="row pb-2">
                                                <div class="pr-1 h3">Price:</div>
                                                <div class="pl-1 h3">$ @Math.Round(prodPrice,2)</div>
                                            </div>
                                            <div class="row pb-2">
                                                <div>
                                                    <select id='amount-of-that-item' name='number' style="display:none">
                                                        @* @for (int i = 1; i < item.ProductSizes.First(s=>s.AvailableItems); i++)
                                            {
                                            <option value=@i>@i</option>
                                            if (i==5)
                                            {
                                            break;
                                            }
                                            }*@
                                                    </select>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>

            }
            <div class="col-12 col-xl-3">
                <div class="cart-container">
                    <div class="h2 pt-3 pl-4 row">Summary</div>
                    <hr />
                    <div class="h5 pl-4 pt-2 row">
                        <div class="pr-1">Initial price:</div>
                        <div class="pl-1">$@initialPrice</div>
                    </div>
                    <div class="h5 pl-4 pt-1 row">
                        <div class="pr-1">Discount from initial price:</div>
                        <div class="pl-1" style="color:red">$@discount</div>
                    </div>
                    <div class="h3 pl-4 pt-3 row">
                        <div class="pr-1">Total:</div>
                        <div class="pl-1" id="totalAmount">$@(initialPrice - discount)</div>
                    </div>
                    <div class="p-3">
                        <a style="font-size:23px" asp-area="" asp-controller="Home" asp-action="DeliveryLocation" class="h3 btn btn-success d-flex justify-content-center align-items-center" id="checkoutButton">
                            <i class="fa-regular fa-credit-card pr-3">

                            </i>Checkout
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <br />
    @if (tenFavItems != null)
    {
        <div class="recommendations-div container">
            <h2 class="most-added-to-fav-text-container pl-3">Most added to favourites:</h2>
            @await Html.PartialAsync("~/Views/UserViews/_CardScrollerPartial.cshtml",tenFavItems)
        </div>
    }

    @if (lastViewedProducts != null)
    {
        <div id="last-viewed-section" class="container">
            <h2 class="most-added-to-fav-text-container pl-3">Last viewed products:</h2>
            @await Html.PartialAsync("~/Views/UserViews/_CardScrollerPartial.cshtml",lastViewedProducts)
        </div>
    }
</div>
