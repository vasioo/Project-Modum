﻿@using Modum.DataAccess.MainModel;
@inject SignInManager<ApplicationUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<ul class="custom-nav-menu">
    <li class="custom-nav-item-user-menu"><a class="custom-nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Profile</a></li>
    <li class="custom-nav-item-user-menu"><a class="custom-nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">Email</a></li>
    <li class="custom-nav-item-user-menu"><a class="custom-nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Password</a></li>
    @if (hasExternalLogins)
    {
        <li id="external-logins" class="custom-nav-item-user-menu"><a id="external-login" class="custom-nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
    }
    <li class="custom-nav-item-user-menu"><a class="custom-nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li>
    <li class="custom-nav-item-user-menu"><a class="custom-nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">Personal data</a></li>
    <li class="custom-nav-item-user-menu" id="logoutNavItem">
        <a class="custom-nav-link" id="logout-btn">Logout</a>
        <form hidden class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
        </form>
    </li>
</ul>

<script>
    function showConfirmationDialog() {
        Swal.fire({
            title: 'Are you sure you want to logout?',
            text: 'You will be logged out of your account.',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, logout',
            cancelButtonText: 'Cancel',
            customClass: {
                confirmButton: 'green-button',
                cancelButton: 'red-button'
            }
        }).then((result) => {
            if (result.isConfirmed) {
                document.querySelector('form').submit();
            }
        });

    }

    document.querySelector('#logout-btn').addEventListener('click', function (e) {
        e.preventDefault();
        showConfirmationDialog();
    });
</script>
